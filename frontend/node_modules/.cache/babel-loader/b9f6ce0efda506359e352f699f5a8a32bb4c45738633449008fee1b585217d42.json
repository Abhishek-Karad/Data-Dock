{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Something went wrong';\n  return Promise.reject(new Error(message));\n});\nexport const userAPI = {\n  // Get all users with pagination and search\n  getUsers: (page = 1, limit = 10, search = '') => {\n    return api.get(`/users?page=${page}&limit=${limit}&search=${search}`);\n  },\n  // Get single user\n  getUser: id => {\n    return api.get(`/users/${id}`);\n  },\n  // Create user\n  createUser: userData => {\n    return api.post('/users', userData);\n  },\n  // Update user\n  updateUser: (id, userData) => {\n    return api.put(`/users/${id}`, userData);\n  },\n  // Delete user\n  deleteUser: id => {\n    return api.delete(`/users/${id}`);\n  },\n  // Export users to CSV\n  exportUsers: () => {\n    return api.get('/users/export/csv', {\n      responseType: 'blob'\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response$data","message","data","Error","userAPI","getUsers","page","limit","search","get","getUser","id","createUser","userData","post","updateUser","put","deleteUser","delete","exportUsers","responseType"],"sources":["/Users/abhishekkarad/Desktop/assign/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const message = error.response?.data?.message || 'Something went wrong';\n    return Promise.reject(new Error(message));\n  }\n);\n\nexport const userAPI = {\n  // Get all users with pagination and search\n  getUsers: (page = 1, limit = 10, search = '') => {\n    return api.get(`/users?page=${page}&limit=${limit}&search=${search}`);\n  },\n\n  // Get single user\n  getUser: (id) => {\n    return api.get(`/users/${id}`);\n  },\n\n  // Create user\n  createUser: (userData) => {\n    return api.post('/users', userData);\n  },\n\n  // Update user\n  updateUser: (id, userData) => {\n    return api.put(`/users/${id}`, userData);\n  },\n\n  // Delete user\n  deleteUser: (id) => {\n    return api.delete(`/users/${id}`);\n  },\n\n  // Export users to CSV\n  exportUsers: () => {\n    return api.get('/users/export/csv', {\n      responseType: 'blob',\n    });\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,GAAG,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,oBAAA;EACT,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,sBAAsB;EACvE,OAAOL,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAACF,OAAO,CAAC,CAAC;AAC3C,CACF,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG;EACrB;EACAC,QAAQ,EAAEA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,KAAK;IAC/C,OAAOrB,GAAG,CAACsB,GAAG,CAAC,eAAeH,IAAI,UAAUC,KAAK,WAAWC,MAAM,EAAE,CAAC;EACvE,CAAC;EAED;EACAE,OAAO,EAAGC,EAAE,IAAK;IACf,OAAOxB,GAAG,CAACsB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EAChC,CAAC;EAED;EACAC,UAAU,EAAGC,QAAQ,IAAK;IACxB,OAAO1B,GAAG,CAAC2B,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;EACrC,CAAC;EAED;EACAE,UAAU,EAAEA,CAACJ,EAAE,EAAEE,QAAQ,KAAK;IAC5B,OAAO1B,GAAG,CAAC6B,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC1C,CAAC;EAED;EACAI,UAAU,EAAGN,EAAE,IAAK;IAClB,OAAOxB,GAAG,CAAC+B,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;EACnC,CAAC;EAED;EACAQ,WAAW,EAAEA,CAAA,KAAM;IACjB,OAAOhC,GAAG,CAACsB,GAAG,CAAC,mBAAmB,EAAE;MAClCW,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}